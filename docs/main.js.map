{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["let boardArray : string[] = JSON.parse(localStorage.getItem('boardArray') || '[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]')\r\nlet cellArray: HTMLButtonElement[] = [document.querySelector('#cell-0') as HTMLButtonElement,document.querySelector('#cell-1') as HTMLButtonElement,document.querySelector('#cell-2') as HTMLButtonElement,document.querySelector('#cell-3') as HTMLButtonElement,document.querySelector('#cell-4') as HTMLButtonElement,document.querySelector('#cell-5') as HTMLButtonElement,document.querySelector('#cell-6') as HTMLButtonElement,document.querySelector('#cell-7') as HTMLButtonElement,document.querySelector('#cell-8') as HTMLButtonElement]\r\nlet currentPlayer : 'X' | 'O' = localStorage.getItem('currentPlayer') as 'X' | 'O' || 'X'\r\nlet displayPlayer = document.querySelector('#player') as HTMLSpanElement\r\nlet resetButton = document.querySelector('#reset') as HTMLButtonElement\r\nlet gameOver = JSON.parse(localStorage.getItem('gameOver') || 'false');\r\ndisplayPlayer.textContent = currentPlayer\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    cellArray.forEach((cell, index) => {\r\n        cell.textContent = boardArray[index]\r\n    })\r\n    if (gameOver) \r\n        window.alert('This game is finished')\r\n})\r\n\r\n\r\nconst resetGame = () => {\r\n    boardArray = ['','','','','','','','','']\r\n    cellArray.forEach(cell => {\r\n        cell.textContent = ''\r\n    })\r\n    currentPlayer = 'X'\r\n    displayPlayer.textContent = currentPlayer\r\n    gameOver = false;\r\n    localStorage.clear()\r\n}\r\n\r\nconst checkWin = () => {\r\n    const winCombos = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]]\r\n    winCombos.forEach(combo => {\r\n        if (boardArray[combo[0]] === boardArray[combo[1]] && boardArray[combo[1]] === boardArray[combo[2]] && boardArray[combo[0]] !== '') {\r\n            window.alert(`Player ${boardArray[combo[0]]} wins!`)\r\n            gameOver = true;\r\n            localStorage.setItem('gameOver', JSON.stringify(gameOver))\r\n        }\r\n        else if (boardArray.every(cell => cell !== '' && !gameOver)) {\r\n            window.alert('Tie game!')\r\n            gameOver = true;\r\n            localStorage.setItem('gameOver', JSON.stringify(gameOver))\r\n            \r\n        }\r\n    })\r\n}\r\n\r\ncellArray.forEach((cell, index) => {\r\n    if (cell) {\r\n        cell.addEventListener('mouseenter', () => {\r\n            if (cell.textContent === '' && !gameOver) {\r\n            let hoverIndicator = document.createElement('span');\r\n            hoverIndicator.textContent = currentPlayer;\r\n            hoverIndicator.classList.add('hover-indicator');\r\n            cell.appendChild(hoverIndicator);\r\n        }\r\n        });\r\n        cell.addEventListener('mouseleave', () => {\r\n            if (cell.firstChild?.nodeName === 'SPAN' && !gameOver) {\r\n            cell.removeChild(cell.firstChild);\r\n            }       \r\n        });\r\n        cell.addEventListener('click', () => {\r\n            if (boardArray[index] === '' && !gameOver) {\r\n                boardArray[index] = currentPlayer\r\n                cell.textContent = currentPlayer\r\n            currentPlayer = currentPlayer === 'X' ? 'O' : 'X'\r\n            displayPlayer.textContent = currentPlayer\r\n            localStorage.setItem('currentPlayer', currentPlayer)\r\n            localStorage.setItem('boardArray', JSON.stringify(boardArray))\r\n            \r\n            checkWin()\r\n        }\r\n    })\r\n}})\r\n\r\nresetButton.addEventListener('click', resetGame)"],
  "mappings": "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",
  "names": []
}
